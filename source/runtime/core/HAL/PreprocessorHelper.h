#pragma once
#define PREPROCESSOR_TO_STRING(x) PREPROCESSOR_TO_STRING_INNER(x)
#define PREPROCESSOR_TO_STRING_INNER(x) #x

#define PREPROCESSOR_JOIN(x, y) PREPROCESSOR_JOIN_INNER(x, y)
#define PREPROCESSOR_JOIN_INNER(x, y) x##y

#define PREPROCESSOR_IF(cond, x, y) PREPROCESSOR_JOIN(PREPROCESSOR_IF_INNER, cond)(x, y)
#define PREPROCESSOR_IF_INNER_1(x, y) x
#define PREPROCESSOR_IF_INNER_0(x, y) y

#define PREPROCESSOR_COMMA_SEPARATED(first, second, ...) first, second, ##_VA_ARGS__

#define PREPROCESSOR_NOTHING

#ifdef OVERRIDE_PLATFORM_HEADER_NAME
#define PLATFORM_HEADER_NAME OVERRIDE_PLATFORM_HEADER_NAME
#else
#define PLATFORM_HEADER_NAME UBT_COMPILED_PLATFORM
#endif

#ifndef PLATFORM_IS_EXTENSION
#define PLATFORM_IS_EXTENSION 0
#endif // !PLATFORM_IS_EXTENSION

#if PLATFORM_IS_EXTENSION
#define COMPILED_PLATFORM_HEADER(SUFFIX) PREPROCESSOR_TO_STRING(PREPROCESSOR_JOIN(PLATFORM_HEADER_NAME, SUFFIX))
#else
#define COMPILED_PLATFORM_HEADER(suffix) PREPROCESSOR_TO_STRING(PREPROCESSOR_JOIN(PLATFORM_HEADER_NAME/PLATFORM_HEADER_NAME, suffix))
#endif // PLATFORM_IS_EXTENSION


